{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/TableLink/TableLink.tsx","components/PersonInTable/PersonInTable.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","to","text","isActive","classNames","Navigation","role","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","TableLink","person","name","sex","slug","PersonInTable","born","died","fatherName","father","motherName","mother","personId","useParams","PeopleTable","people","map","PeoplePage","useState","setPeople","isError","setError","isLoaded","setLoaded","useEffect","getPeopleFromSever","peopleFromServer","linkedPeople","newPerson","findParentByName","parent","parentName","find","human","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f6ddb936.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const TableLink: FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { TableLink } from '../TableLink';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonInTable: FC<Props> = ({ person }) => {\n  const {\n    born,\n    died,\n    fatherName,\n    father,\n    motherName,\n    mother,\n    sex,\n    slug,\n  } = person;\n\n  const { personId } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames(\n        { 'has-background-warning': personId === slug },\n      )}\n    >\n      <td>\n        <TableLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <TableLink person={mother} />\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <TableLink person={father} />\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonInTable } from '../PersonInTable';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <PersonInTable person={person} />\n      ))}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setError] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    setLoaded(false);\n\n    const getPeopleFromSever = async () => {\n      try {\n        const peopleFromServer = await getPeople();\n\n        const linkedPeople = peopleFromServer.map(person => {\n          const newPerson = { ...person };\n\n          function findParentByName(\n            parent: Person[],\n            parentName: string | null,\n          ): Person | undefined {\n            return parent.find(human => human.name === parentName);\n          }\n\n          const mother = findParentByName(peopleFromServer, person.motherName);\n          const father = findParentByName(peopleFromServer, person.fatherName);\n\n          if (mother) {\n            newPerson.mother = mother;\n          }\n\n          if (father) {\n            newPerson.father = father;\n          }\n\n          return newPerson;\n        });\n\n        setPeople(linkedPeople);\n      } catch {\n        setError(true);\n      } finally {\n        setLoaded(true);\n      }\n    };\n\n    getPeopleFromSever();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isLoaded && !isError && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoaded && !isError\n            ? <Loader />\n            : <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { Navigation } from './components/Navigation';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personId\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}